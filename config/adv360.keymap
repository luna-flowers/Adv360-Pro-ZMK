
/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */


/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/backlight.h>
#include "keypos_adv360.h"

#define KEYS_R RN0 RN1 RN2 RN3 RN4 RN5 RT0 RT1 RT2 RT3 RT4 RT5 RM0 RM1 RM2 RM3 RM4 RM5 RB0 RB1 RB2 RB3 RB4 RB5
#define THUMBS LH0 LH1 LH2 RH0 RH1 RH2

/ {
  behaviors {

    #include "macros.dtsi"


    hml: homerow_mods_left {
        compatible = "zmk,behavior-hold-tap";
        label = "HOMEROW_MODS_LEFT";
        #binding-cells = <2>;
        tapping-term-ms = <280>;
        quick_tap_ms = <175>;
        require-prior-idle-ms = <150>;
        flavor = "balanced";
        bindings = <&kp>, <&kp>;
        hold-trigger-on-release;
        hold-trigger-key-positions = <KEYS_R THUMBS>;
    };

    ht: hold_tap{
        compatible = "zmk,behavior-hold-tap";
        label = "HOLD_TAP";
        #binding-cells = <2>;
        tapping-term-ms = <100>;
        flavor = "tap-preferred";
        bindings = <&kp>, <&kp>;
    };
  };

    keymap {
        compatible = "zmk,keymap";


        default_layer {
            bindings = <
 &kp EQUAL      &kp N1        &kp N2        &kp N3        &kp N4              &kp N5              &tog 1                                                                        &mo 3               &kp N6  &kp N7  &kp N8      &kp N9    &kp N0    &kp MINUS
 &kp TAB        &kp Q         &kp W         &kp E         &kp R               &kp T               &tog 5                                                                        &tog 4              &kp Y   &kp U   &kp I       &kp O     &kp P     &kp BSLH
 &kp ESC        &hml LGUI A   &hml LALT S   &hml LCTRL D  &hml LSHIFT F       &kp G               &macro_heart       &kp LCTRL  &kp LALT                  &kp LGUI   &kp RCTRL &none                &kp H   &kp J   &kp K       &kp L     &kp SEMI  &kp SQT
 &kp LSHFT      &kp Z         &kp X         &kp C         &kp V               &kp B               				     &kp HOME   	    &kp PG_UP      		                                                  &kp N   &kp M   &kp COMMA   &kp DOT   &kp FSLH  &kp RSHFT
 &mo 2          &kp GRAVE     &kp CAPS      &kp LEFT      &kp RIGHT                               &kp BSPC           &kp DEL    &kp END                   &kp PG_DN  &kp ENTER &kp SPACE                    &kp UP  &kp DOWN    &kp LBKT  &kp RBKT  &mo 2
            >;
        };

        layer_keypad {
            bindings = <
 &kp EQUAL     &kp N1    &kp N2    &kp N3     &kp N4  &kp N5              &trans                                                                 &mo 3  &kp N6  &kp KP_NUM  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY  &kp MINUS
   &kp TAB      &kp Q     &kp W     &kp E      &kp R   &kp T               &none                                                                 &none   &kp Y   &kp KP_N7     &kp KP_N8      &kp KP_N9     &kp KP_MINUS   &kp BSLH
   &kp ESC      &kp A     &kp S     &kp D      &kp F   &kp G               &none  &kp LCTRL  &kp LALT                   &kp LGUI  &kp RCTRL      &none   &kp H   &kp KP_N4     &kp KP_N5      &kp KP_N6      &kp KP_PLUS    &kp SQT
 &kp LSHFT      &kp Z     &kp X     &kp C      &kp V   &kp B               		     &kp HOME   		&kp PG_UP      		 &kp N   &kp KP_N1     &kp KP_N2      &kp KP_N3     &kp KP_ENTER  &kp RSHFT
     &mo 2  &kp GRAVE  &kp CAPS  &kp LEFT  &kp RIGHT                    &kp BSPC    &kp DEL   &kp END                   &kp PG_DN  &kp ENTER  &kp KP_N0              &kp UP      &kp DOWN     &kp KP_DOT         &kp RBKT      &mo 2
            >;
        };

        layer_fn {
            bindings = <
 &kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6            &tog 1                                                   &mo 3  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
 &trans  &trans  &trans  &trans  &trans  &trans             &none                                                   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             &none  &trans  &trans                  &trans  &trans   &none  &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans  &trans             		   &trans   		   &trans   	    &trans  &trans  &trans   &trans   &trans   &trans
 &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans                  &trans  &trans  &trans          &trans  &trans   &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
  &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                             &none                                                                              &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4   &none
  &none         &none         &none         &none         &none         &none                       &bootloader                                                                         &bootloader         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none            &rgb_ug RGB_MEFS_CMD 5  &bt BT_CLR   &none                  &bt BT_CLR  &bt BT_CLR  &rgb_ug RGB_MEFS_CMD 5         &none         &none         &none         &none         &none   &none
  &none         &none         &none         &none         &none         &none                             		      &none   	             &none       				            &none         &none         &none         &none         &none   &none
  &none         &none         &none    &bl BL_INC    &bl BL_DEC                                 &rgb_ug RGB_TOG  &bl BL_TOG   &none                  &none  &bl BL_TOG         &rgb_ug RGB_TOG                  &bl BL_INC    &bl BL_DEC         &none         &none   &none
            >;
        };

        layer_PDX {
            bindings = <
 &trans  &kp F1  &kp F2    &kp F3  &trans  &trans            &trans                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans    &trans  &trans  &trans            &trans                                                          &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans   &kp Y  &ht S U   &kp I   &kp O   &kp P             &trans     &trans       &trans                  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans    &trans  &trans  &trans            			     &kp KP_PLUS  	     &trans  	  	     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans  &trans    &trans  &trans                    &trans  &kp SPACE  &kp KP_MINUS                 &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans
            >;
        };

	      layer_gaming {
            bindings = <
 &trans  &trans      &trans  &trans  &trans  &trans        &trans                                                                    &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &to 0   &kp TAB     &kp Q   &kp W   &kp E   &kp R         &kp T                                                                     &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LSHIFT  &kp A   &kp S   &kp D   &kp F         &kp G      &trans     &trans                  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &kp LCTRL   &kp Z   &kp X   &kp C   &kp V        			 &trans  	         &trans  			     &trans  &trans  &trans  &trans  &trans  &trans
 &trans  &trans      &trans  &trans  &trans                &kp LCTRL  &kp SPACE  &kp B                   &trans  &macro_gaming_chat  &to 0           &trans  &trans  &trans  &trans  &trans
       	    >;	
      	};
    };
};
